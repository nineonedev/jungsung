@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "./variables" as var;

@mixin mq($key-or-size, $direction: "max") {
    $breakpoints: var.$breakpoints;

    @if (meta.type-of($key-or-size) == "string") {
        $size: map.get($breakpoints, $key-or-size);
        @media (#{$direction}-width: #{$size}px) {
            @content;
        }
    } @else if (meta.type-of($key-or-size) == "number") {
        @media (#{$direction}-width: #{$key-or-size}px) {
            @content;
        }
    } @else {
        @error "No found breakpoint: #{$key-or-size}";
    }
}

@mixin pos-full() {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
@mixin pos-center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
}

@mixin mq-max($key-or-size) {
    @include mq($key-or-size, "max") {
        @content;
    }
}

@mixin mq-min($key-or-size) {
    @include mq($key-or-size, "min") {
        @content;
    }
}

@mixin flex-center() {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin blind() {
    position: absolute;
    clip: rect(0 0 0 0);
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
}

@mixin pos-center() {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin line-clamp($line) {
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    -webkit-line-clamp: $line;
}

@mixin img-cover() {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@mixin img-auto-cover($percent: 56.25%) {
    position: relative;
    overflow: hidden;
    height: 0;
    padding-bottom: $percent;

    img {
        @include pos-center();
        object-fit: cover;
    }
}

@mixin backdrop($opacity: 0.45) {
    @include pos-center();
    background: rgba(0, 0, 0, $opacity);
}
